# yamllint disable rule:line-length
---

# Runs on PRs to ensure the changes meet requirements and pass tests.
# Can also be run on-demand to validate branches.
name: PR Validation

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]
  workflow_dispatch:

concurrency:
  # only one of this action may run per branch
  group: ${{ github.event.pull_request.head.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  MAVEN_3_VERSION: 3.9.11
  MAVEN_4_VERSION: 4.0.0-rc-4

jobs:
  yaml-linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: YAML linting
        uses: karancode/yamllint-github-action@v3.0.0
        with:
          yamllint_strict: true

      - name: Action linting
        uses: raven-actions/actionlint@v2

  cache-dependencies:
    name: Cache dependencies
    runs-on: ubuntu-latest
    outputs:
      MAVEN_3_VERSION: ${{ steps.set-outputs.outputs.MAVEN_3_VERSION }}
      MAVEN_4_VERSION: ${{ steps.set-outputs.outputs.MAVEN_4_VERSION }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          check-latest: false
          distribution: temurin
          java-version: 21

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_3_VERSION }}

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Resolve dependencies
        run: |
          mvn install -f maven-parent-simple/pom.xml
          mvn install -f maven-parent-opinionated/pom.xml
          mvn dependency:resolve-plugins
          mvn dependency:resolve
          mvn dependency:go-offline

      - name: Set outputs since env vars can't be used in matrix strategies
        id: set-outputs
        run: |
          echo "MAVEN_3_VERSION=$MAVEN_3_VERSION" >> "$GITHUB_OUTPUT"
          echo "MAVEN_4_VERSION=$MAVEN_4_VERSION" >> "$GITHUB_OUTPUT"

  build-validation:
    name: PR Validation (Maven ${{ matrix.maven-version }}, Java ${{ matrix.java-version }})
    runs-on: ubuntu-latest
    needs: [cache-dependencies]
    strategy:
      fail-fast: false
      matrix:
        maven-version:
          - ${{ needs.cache-dependencies.outputs.MAVEN_3_VERSION }}
          - ${{ needs.cache-dependencies.outputs.MAVEN_4_VERSION }}
        java-version:
          - 17
          - 21
        include:
          - maven-version: ${{ needs.cache-dependencies.outputs.MAVEN_3_VERSION }}
            java-version: 8
          - maven-version: ${{ needs.cache-dependencies.outputs.MAVEN_3_VERSION }}
            java-version: 11

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v5
        with:
          check-latest: false
          distribution: temurin
          java-version: ${{ matrix.java-version }}

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ matrix.maven-version }}

      - name: Restore local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          # no restore-keys; use exactly what the cache-dependencies job did

      - name: Build and test
        run: mvn -Djava.version=${{ matrix.java-version }} -o verify

      # dependency:analyze-only is run as part of the previous step,
      # but this sometimes catches more
      - name: Run dependency and bug analysis
        run: mvn -Djava.version=${{ matrix.java-version }} -o dependency:analyze
